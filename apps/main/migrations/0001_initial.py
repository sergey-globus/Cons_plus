# Generated by Django 4.2.7 on 2025-07-15 22:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArticleCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('icon', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_first_name', models.CharField(db_column='first_name', max_length=255, verbose_name='Имя (зашифровано)')),
                ('_last_name', models.CharField(db_column='last_name', max_length=255, verbose_name='Фамилия (зашифровано)')),
                ('_email', models.CharField(db_column='email', max_length=255, verbose_name='Email (зашифровано)')),
                ('question', models.TextField(verbose_name='Вопрос')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_processed', models.BooleanField(default=False, verbose_name='Обработано')),
            ],
            options={
                'verbose_name': 'Заявка на консультацию',
                'verbose_name_plural': 'Заявки на консультации',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название шаблона')),
                ('template_content', models.TextField(verbose_name='Содержание шаблона')),
                ('required_fields_json', models.TextField(default='[]', verbose_name='Обязательные поля')),
            ],
            options={
                'verbose_name': 'Шаблон документа',
                'verbose_name_plural': 'Шаблоны документов',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('synonyms', models.CharField(blank=True, max_length=200, null=True, verbose_name='Синонимы для поиска')),
                ('description', models.TextField(default='', verbose_name='Описание')),
                ('category', models.CharField(blank=True, max_length=100, null=True, verbose_name='Категория')),
                ('tags', models.CharField(blank=True, max_length=200, verbose_name='Теги')),
                ('icon_class', models.CharField(blank=True, default='fas fa-file-alt', max_length=50, verbose_name='Иконка')),
                ('url_name', models.CharField(blank=True, max_length=100, verbose_name='Имя URL для ссылки')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Часто задаваемый вопрос',
                'verbose_name_plural': 'Часто задаваемые вопросы',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.articlecategory')),
            ],
        ),
    ]
